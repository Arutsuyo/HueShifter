cmake_minimum_required(VERSION 3.11)

project(HueShifter)
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")
IF(CMAKE_BUILD_TYPE MATCHES Debug)
	message("Debug build.")
	add_definitions(-DDEBUG)
ELSEIF(CMAKE_BUILD_TYPE MATCHES Release)
	message("Release build.")
ENDIF()
SET (CMAKE_SHARED_LINKER_FLAGS)
IF(WIN32)
	add_definitions(-D_CRT_SECURE_NO_WARNINGS)
	add_definitions(-DSTBI_MSC_SECURE_CRT)
endif()
FILE(GLOB SOURCE_SOURCE ${CMAKE_SOURCE_DIR}/src/*.cpp)
FILE(GLOB SOURCE_HEADERS ${CMAKE_SOURCE_DIR}/src/*.h)
FILE(GLOB GLFWHEADERS ${CMAKE_SOURCE_DIR}/include/GLFW/*.h)
FILE(GLOB GLADHEADERS ${CMAKE_SOURCE_DIR}/include/glad/*.h)
FILE(GLOB COLORHEADERS ${CMAKE_SOURCE_DIR}/include/color/*.hpp)
FILE(GLOB LOOSEHEADERS ${CMAKE_SOURCE_DIR}/include/*.h)


FILE(GLOB DLLS ${CMAKE_SOURCE_DIR}/lib/Win32/*.dll)
FILE(GLOB LIBS ${CMAKE_SOURCE_DIR}/lib/Win32/*.lib)

SOURCE_GROUP("Sources" FILES${SOURCE_SOURCE})
SOURCE_GROUP("Headers" FILES${SOURCE_HEADERS})
SOURCE_GROUP("exheaders" 	FILES${GLFWHEADERS}
													FILES${LOOSEHEADERS}
													FILES${GLADHEADERS}
													FILES${COLORHEADERS}
						)

SET(SOURCES ${SOURCE_SOURCE})
SET(HEADERS 	${SOURCE_HEADERS}
							${GLFWHEADERS}
							${GLADHEADERS}
							${COLORHEADERS}
							${LOOSEHEADERS}
	 )

include_directories(${CMAKE_SOURCE_DIR}/include)
LINK_DIRECTORIES(${CMAKE_SOURCE_DIR}/lib/Win32)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)

add_executable(HueShifter ${SOURCES} ${HEADERS})
TARGET_LINK_LIBRARIES(HueShifter glfw3.lib glad.lib)

foreach(dll ${DLL})
	FILE (COPY ${dll} DESTINATION ${PROJECT_BINARY_DIR}/bin)
ENDFOREACH()

IF (UNIX AND NOT APPLE)
	FIND_PACKAGE(OpenGL REQUIRED)
	FIND_PACKAGE(glad REQUIRED)
	target_link_libraries(HueShifter ${OPENGL_LIBRARIES} ${glad_LIBRARIES})
	target_link_libraries(HueShifter -lz -ldl -lglfw3 -lGL -lX11 -lm -lpthread)
endif ()

file(GLOB SLIDERS "img/*")
file(COPY ${SLIDERS} DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/img)
